```bash
# =========================================
# 환경 변수 예시 (.env.example)
#
# 이 파일은 배포(Production)용 예시입니다. 실제 운영환경에서는
# - 반드시 `SECRET_KEY`를 안전하게 생성/관리하고
# - `DEBUG=False`로 설정하며
# - 민감한 값은 CI/CD 시 비밀관리시스템(예: AWS Secrets Manager, GitHub Secrets)에 저장하세요.
# =========================================

# 실행 환경: development | staging | production
ELDERLY_RAG_ENV=production

# Django 설정
# production에서는 DEBUG=False 로 설정하세요
DEBUG=False
SECRET_KEY=replace-with-a-secure-random-value
# 쉼표로 구분된 호스트 리스트. 예: example.com,www.example.com
ALLOWED_HOSTS=yourdomain.com

# 데이터베이스 설정
# 권장: DATABASE_URL 사용 (postgres://user:pass@host:port/dbname)
# 예: postgres://rag_user:changeme@127.0.0.1:5432/elderly_rag
DATABASE_URL=postgres://rag_user:changeme@127.0.0.1:5432/elderly_rag

# 또는 개별 POSTGRES_* 환경변수 중 하나를 사용해도 됩니다.
POSTGRES_DB=elderly_rag
POSTGRES_USER=rag_user
POSTGRES_PASSWORD=changeme
POSTGRES_HOST=127.0.0.1
POSTGRES_PORT=5432

# Django Static / Media
STATIC_ROOT=/var/www/elderly_rag/static
MEDIA_ROOT=/var/www/elderly_rag/media

# Gunicorn / uWSGI (프로세스 설정)
GUNICORN_WORKERS=3
# =========================================
# 환경 변수 예시 (.env.example)
#
# 이 파일은 배포(Production)용 예시입니다. 실제 운영환경에서는
# - 반드시 SECRET_KEY를 안전하게 생성/관리하고
# - DEBUG=False로 설정하며
# - 민감한 값은 CI/CD 시 비밀관리시스템(예: AWS Secrets Manager, GitHub Secrets)에 저장하세요.
# =========================================

# 실행 환경: development | staging | production
ELDERLY_RAG_ENV=production

# Django 설정
# production에서는 DEBUG=False 로 설정하세요
DEBUG=False
SECRET_KEY=replace-with-a-secure-random-value
# 쉼표로 구분된 호스트 리스트. 예: example.com,www.example.com
ALLOWED_HOSTS=yourdomain.com

# 데이터베이스 설정
# 권장: DATABASE_URL 사용 (postgres://user:pass@host:port/dbname)
# 예: postgres://rag_user:changeme@127.0.0.1:5432/elderly_rag
DATABASE_URL=postgres://rag_user:changeme@127.0.0.1:5432/elderly_rag

# 또는 개별 POSTGRES_* 환경변수 중 하나를 사용해도 됩니다.
POSTGRES_DB=elderly_rag
POSTGRES_USER=rag_user
POSTGRES_PASSWORD=changeme
POSTGRES_HOST=127.0.0.1
POSTGRES_PORT=5432

# Django Static / Media
STATIC_ROOT=/var/www/elderly_rag/static
MEDIA_ROOT=/var/www/elderly_rag/media

# Gunicorn / uWSGI (프로세스 설정)
GUNICORN_WORKERS=3
GUNICORN_BIND=127.0.0.1:8000

# 도메인 / SSL
DOMAIN=yourdomain.com
# If using HTTPS termination at nginx, set this to True
SECURE_SSL_REDIRECT=True
# CSRF trusted origins - must include scheme (http:// or https://)
# For IP: http://43.202.39.220, For domain: https://yourdomain.com
CSRF_TRUSTED_ORIGINS=https://yourdomain.com

# OpenAI (임베딩 및 LLM 사용)
OPENAI_API_KEY=your_openai_api_key_here
# 임베딩 모델: text-embedding-3-small 권장
OPENAI_EMB_MODEL=text-embedding-3-small

# ChromaDB / Vectorstore
CHROMA_PERSIST_DIR=./data/chroma_db
# 벡터 차원, 인덱스 타입 등 고급 설정은 코드 또는 별도 config에서 관리

# RAG / Chunking / Re-ranker
CHUNKING_STRATEGY=recursive_character
CHUNK_SIZE=1000
CHUNK_OVERLAP=200
# 하이브리드 리랭크에서 의미적 점수 대비 도메인 가중치 비율 (0.0 - 1.0)
HYBRID_RERANK_WEIGHT=0.6

# 로깅 / 모니터링
LOG_LEVEL=INFO
# (선택) Sentry DSN
SENTRY_DSN=

# 캐시 / 비동기 작업 (선택)
# Redis URL 예: redis://localhost:6379/0
REDIS_URL=redis://127.0.0.1:6379/0

# 이메일 (관리자 알림용)
EMAIL_BACKEND=django.core.mail.backends.smtp.EmailBackend
EMAIL_HOST=smtp.example.com
EMAIL_PORT=587
EMAIL_USE_TLS=True
EMAIL_HOST_USER=postmaster@example.com
EMAIL_HOST_PASSWORD=changeme

# 관리자 계정 (매뉴얼로 안전하게 생성 권장)
DJANGO_SUPERUSER_USERNAME=admin
DJANGO_SUPERUSER_EMAIL=admin@example.com

# 서비스 운영 관련 (옵션)
AUTO_START_GUNICORN=true

# 개발/로컬 편의 설정 (production에서는 무시 또는 삭제)
# LOCAL_DEV_UI_PORTS: gradio/streamlit 등 (로컬에서만 사용)
GRADIO_PORT=7860
STREAMLIT_PORT=8501

# 데이터 디렉터리 (문서/파일 원본 위치)
DATA_DIRECTORY=./data/복지로

# ------------------------------------------------------------------
# 사용법 요약
# - 이 파일을 복사하여 `.env`로 이름을 바꾸고 실제 값을 채운 뒤 배포하세요.
# - CI/CD 또는 서버에서 비밀값(SECRET_KEY, DATABASE_URL, OPENAI_API_KEY 등)은
#   환경 변수로 주입하거나 비밀 관리자에서 불러오세요.
# - `DEBUG`는 절대 True 로 두지 마세요.
# ------------------------------------------------------------------